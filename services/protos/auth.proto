syntax = "proto3";

package auth;

// Auth service definition
service AuthService {
  // Authenticate a user and return a token
  rpc Authenticate(AuthRequest) returns (AuthResponse);
  
  // Validate a token and return user information
  rpc ValidateToken(TokenRequest) returns (TokenValidationResponse);
  
  // Refresh an access token using a refresh token
  rpc RefreshToken(RefreshTokenRequest) returns (AuthResponse);
  
  // Get user information by ID
  rpc GetUser(UserRequest) returns (UserResponse);
  
  // Create a new user
  rpc CreateUser(CreateUserRequest) returns (UserResponse);
  
  // Update user information
  rpc UpdateUser(UpdateUserRequest) returns (UserResponse);
  
  // Delete a user
  rpc DeleteUser(UserRequest) returns (DeleteUserResponse);
  
  // Check if email exists
  rpc CheckEmailExists(EmailRequest) returns (EmailExistsResponse);
  
  // Get user roles
  rpc GetUserRoles(UserRequest) returns (UserRolesResponse);
  
  // Health check
  rpc HealthCheck(HealthCheckRequest) returns (HealthCheckResponse);
}

// Authentication request
message AuthRequest {
  string email = 1;
  string password = 2;
}

// Authentication response with tokens
message AuthResponse {
  string access_token = 1;
  string refresh_token = 2;
  string token_type = 3;
  int64 expires_in = 4;
}

// Token validation request
message TokenRequest {
  string token = 1;
}

// Token validation response
message TokenValidationResponse {
  bool is_valid = 1;
  string user_id = 2;
  bool is_active = 3;
  bool is_superuser = 4;
  int64 expires_at = 5;
}

// Refresh token request
message RefreshTokenRequest {
  string refresh_token = 1;
}

// User request by ID
message UserRequest {
  string user_id = 1;
}

// User response with user information
message UserResponse {
  string id = 1;
  string email = 2;
  string full_name = 3;
  bool is_active = 4;
  bool is_superuser = 5;
  int64 created_at = 6;
  int64 updated_at = 7;
}

// Create user request
message CreateUserRequest {
  string email = 1;
  string password = 2;
  string full_name = 3;
  bool is_active = 4;
  bool is_superuser = 5;
}

// Update user request
message UpdateUserRequest {
  string user_id = 1;
  optional string email = 2;
  optional string password = 3;
  optional string full_name = 4;
  optional bool is_active = 5;
  optional bool is_superuser = 6;
}

// Delete user response
message DeleteUserResponse {
  bool success = 1;
  string message = 2;
}

// Email request
message EmailRequest {
  string email = 1;
}

// Email exists response
message EmailExistsResponse {
  bool exists = 1;
}

// User roles response
message UserRolesResponse {
  string user_id = 1;
  repeated string roles = 2;
  map<string, string> permissions = 3;
}

// Health check request
message HealthCheckRequest {
  string service = 1;
}

// Health check response
message HealthCheckResponse {
  bool status = 1;
  string message = 2;
  int64 timestamp = 3;
}